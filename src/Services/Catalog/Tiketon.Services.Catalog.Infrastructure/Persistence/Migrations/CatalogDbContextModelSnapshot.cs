// <auto-generated />

using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;

namespace Tiketon.Services.Catalog.Infrastructure.Persistence.Migrations
{
    [DbContext(typeof(CatalogDbContext))]
    internal class CatalogDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tiketon.Services.Catalog.Domain.Entities.Category", b =>
            {
                b.Property<Guid>("CategoryId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.HasKey("CategoryId");

                b.ToTable("Categories");

                b.HasData(
                    new
                    {
                        CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                        Name = "Концерты"
                    },
                    new
                    {
                        CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                        Name = "Театры"
                    },
                    new
                    {
                        CategoryId = new Guid("fe98f549-e790-4e9f-aa16-18c2292a2ee9"),
                        Name = "Спорт"
                    },
                    new
                    {
                        CategoryId = new Guid("bf3f3002-7e53-441e-8b76-f6280be284aa"),
                        Name = "Фильмы"
                    });
            });

            modelBuilder.Entity("Tiketon.Services.Catalog.Domain.Entities.Event", b =>
            {
                b.Property<Guid>("EventId")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("uniqueidentifier");

                b.Property<string>("Artist")
                    .HasColumnType("nvarchar(max)");

                b.Property<Guid>("CategoryId")
                    .HasColumnType("uniqueidentifier");

                b.Property<DateTime>("Date")
                    .HasColumnType("datetime2");

                b.Property<string>("Description")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("ImageUrl")
                    .HasColumnType("nvarchar(max)");

                b.Property<string>("Name")
                    .HasColumnType("nvarchar(max)");

                b.Property<int>("Price")
                    .HasColumnType("int");

                b.HasKey("EventId");

                b.HasIndex("CategoryId");

                b.ToTable("Events");

                b.HasData(
                    new
                    {
                        EventId = new Guid("3448d5a4-0f72-4dd7-bf15-c14a46b26c00"),
                        Artist = "Мадияр Тойболды",
                        CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                        Date = new DateTime(2022, 1, 6, 18, 6, 39, 571, DateTimeKind.Local).AddTicks(8709),
                        Description =
                            "Вас ждёт колоссальный живой звук в исполнении симфонического оркестра и смешанного хора под видео ряд из лучших моментов.",
                        ImageUrl =
                            "https://ticketon.kz/media/upload/23206u45664_ne-prosto-orchestra-saundtreki-naruto-avatar.jpeg",
                        Name = "«Ne prosto orchestra» представляет: Саундтреки «Наруто» и «Аватар»",
                        Price = 8500
                    },
                    new
                    {
                        EventId = new Guid("b419a7ca-3321-4f38-be8e-4d7b6a529319"),
                        Artist = "David Garrett",
                        CategoryId = new Guid("b0788d2f-8003-43c1-92a4-edc76a7c5dde"),
                        Date = new DateTime(2021, 8, 6, 18, 6, 39, 573, DateTimeKind.Local).AddTicks(1994),
                        Description =
                            "Паганини среди поп-звезд и Джими Хендрикс среди скрипачей, немецкий скрипач-виртуоз David Garrett - международная суперзвезда, которая стирает границы между Моцартом и группой Metallica.",
                        ImageUrl = "https://ticketon.kz/files/media/david-garrett-band-stills.jpg",
                        Name = "David Garrett & band UNLIMITED LIVE 2020",
                        Price = 8500
                    },
                    new
                    {
                        EventId = new Guid("62787623-4c52-43fe-b0c9-b7044fb5929b"),
                        Artist = "Симон Вирсаладзе",
                        CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                        Date = new DateTime(2021, 8, 6, 18, 6, 39, 573, DateTimeKind.Local).AddTicks(2060),
                        Description =
                            "«Легенда о любви» - сказка, корни которой уходят в глубину веков. Она родилась на выжженной солнцем земле Востока и не раз становилась объектом литературных обработок. Зрители впервые увидели спектакль «Легенда о любви» 58 лет назад в Мариинском театре.",
                        ImageUrl = "https://ticketon.kz/files/media/legenda-o-lyubvi-v-astana-ballet31023.jpg",
                        Name = "«Легенда о любви» в театре Astana Ballet",
                        Price = 2500
                    },
                    new
                    {
                        EventId = new Guid("1babd057-e980-4cb3-9cd2-7fdd9e525668"),
                        Artist = "Хамит Шангалиев и Алибек Альпиев",
                        CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                        Date = new DateTime(2022, 2, 6, 18, 6, 39, 573, DateTimeKind.Local).AddTicks(2087),
                        Description =
                            "Балет «Султан Бейбарс» - необычайно красивый, поразительно захватывающий рассказ о головокружительном пути к вершинам славы и власти. Такой путь всегда требует жертв во имя служения высшим целям.",
                        ImageUrl = "https://ticketon.kz/files/media/sultan-beybarys-astanaballet2021.jpg",
                        Name = "«Султан Бейбарс» в театре Astana Ballet",
                        Price = 4000
                    },
                    new
                    {
                        EventId = new Guid("adc42c09-08c1-4d2c-9f96-2d15bb1af299"),
                        Artist = "Дина Рубина",
                        CategoryId = new Guid("6313179f-7837-473a-a4d5-a5571b43e6a6"),
                        Date = new DateTime(2021, 12, 6, 18, 6, 39, 573, DateTimeKind.Local).AddTicks(2110),
                        Description =
                            "Мало кто из современных авторов способен читать свои произведения с таким подлинно артистическим мастерством. Два часа пролетают незаметно: Дина Рубина легко держит внимание зала, ее непринужденная интонация, юмор, драматический накал чтения захватывает зрителей и не отпускает до последней минуты встречи.",
                        ImageUrl = "https://ticketon.kz/files/media/img-ticketon-101920567164928.jpeg",
                        Name = "Дина Рубина в Алматы",
                        Price = 1350
                    });
            });

            modelBuilder.Entity("Tiketon.Services.Catalog.Domain.Entities.Event", b =>
            {
                b.HasOne("Tiketon.Services.Catalog.Domain.Entities.Category", "Category")
                    .WithMany("Events")
                    .HasForeignKey("CategoryId")
                    .OnDelete(DeleteBehavior.Cascade)
                    .IsRequired();

                b.Navigation("Category");
            });

            modelBuilder.Entity("Tiketon.Services.Catalog.Domain.Entities.Category", b => { b.Navigation("Events"); });
#pragma warning restore 612, 618
        }
    }
}